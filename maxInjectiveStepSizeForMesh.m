function tmax = maxInjectiveStepSizeForMesh(F, x, y, tol)

if nargin<4, tol = 1e-12; end

%% code from AQP implementation: computeInjectiveStepSize.m
xyz = x;
pqr = y;
%
x = xyz(:,1); x = x(F);
y = xyz(:,2); y = y(F);
z = xyz(:,3); z = z(F);
%
p = pqr(:,1); p = p(F);
q = pqr(:,2); q = q(F);
r = pqr(:,3); r = r(F);

a =  -p(:,1).*q(:,2).*r(:,3) + p(:,1).*r(:,2).*q(:,3) + q(:,1).*p(:,2).*r(:,3) - q(:,1).*r(:,2).*p(:,3) - r(:,1).*p(:,2).*q(:,3) + r(:,1).*q(:,2).*p(:,3) + p(:,1).*q(:,2).*r(:,4) - p(:,1).*r(:,2).*q(:,4) - q(:,1).*p(:,2).*r(:,4) + q(:,1).*r(:,2).*p(:,4) + r(:,1).*p(:,2).*q(:,4) - r(:,1).*q(:,2).*p(:,4) - p(:,1).*q(:,3).*r(:,4) + p(:,1).*r(:,3).*q(:,4) + q(:,1).*p(:,3).*r(:,4) - q(:,1).*r(:,3).*p(:,4) - r(:,1).*p(:,3).*q(:,4) + r(:,1).*q(:,3).*p(:,4) + p(:,2).*q(:,3).*r(:,4) - p(:,2).*r(:,3).*q(:,4) - q(:,2).*p(:,3).*r(:,4) + q(:,2).*r(:,3).*p(:,4) + r(:,2).*p(:,3).*q(:,4) - r(:,2).*q(:,3).*p(:,4);
b =  -x(:,1).*q(:,2).*r(:,3) + x(:,1).*r(:,2).*q(:,3) + y(:,1).*p(:,2).*r(:,3) - y(:,1).*r(:,2).*p(:,3) - z(:,1).*p(:,2).*q(:,3) + z(:,1).*q(:,2).*p(:,3) + x(:,2).*q(:,1).*r(:,3) - x(:,2).*r(:,1).*q(:,3) - y(:,2).*p(:,1).*r(:,3) + y(:,2).*r(:,1).*p(:,3) + z(:,2).*p(:,1).*q(:,3) - z(:,2).*q(:,1).*p(:,3) - x(:,3).*q(:,1).*r(:,2) + x(:,3).*r(:,1).*q(:,2) + y(:,3).*p(:,1).*r(:,2) - y(:,3).*r(:,1).*p(:,2) - z(:,3).*p(:,1).*q(:,2) + z(:,3).*q(:,1).*p(:,2) + x(:,1).*q(:,2).*r(:,4) - x(:,1).*r(:,2).*q(:,4) - y(:,1).*p(:,2).*r(:,4) + y(:,1).*r(:,2).*p(:,4) + z(:,1).*p(:,2).*q(:,4) - z(:,1).*q(:,2).*p(:,4) - x(:,2).*q(:,1).*r(:,4) + x(:,2).*r(:,1).*q(:,4) + y(:,2).*p(:,1).*r(:,4) - y(:,2).*r(:,1).*p(:,4) - z(:,2).*p(:,1).*q(:,4) + z(:,2).*q(:,1).*p(:,4) + x(:,4).*q(:,1).*r(:,2) - x(:,4).*r(:,1).*q(:,2) - y(:,4).*p(:,1).*r(:,2) + y(:,4).*r(:,1).*p(:,2) + z(:,4).*p(:,1).*q(:,2) - z(:,4).*q(:,1).*p(:,2) - x(:,1).*q(:,3).*r(:,4) + x(:,1).*r(:,3).*q(:,4) + y(:,1).*p(:,3).*r(:,4) - y(:,1).*r(:,3).*p(:,4) - z(:,1).*p(:,3).*q(:,4) + z(:,1).*q(:,3).*p(:,4) + x(:,3).*q(:,1).*r(:,4) - x(:,3).*r(:,1).*q(:,4) - y(:,3).*p(:,1).*r(:,4) + y(:,3).*r(:,1).*p(:,4) + z(:,3).*p(:,1).*q(:,4) - z(:,3).*q(:,1).*p(:,4) - x(:,4).*q(:,1).*r(:,3) + x(:,4).*r(:,1).*q(:,3) + y(:,4).*p(:,1).*r(:,3) - y(:,4).*r(:,1).*p(:,3) - z(:,4).*p(:,1).*q(:,3) + z(:,4).*q(:,1).*p(:,3) + x(:,2).*q(:,3).*r(:,4) - x(:,2).*r(:,3).*q(:,4) - y(:,2).*p(:,3).*r(:,4) + y(:,2).*r(:,3).*p(:,4) + z(:,2).*p(:,3).*q(:,4) - z(:,2).*q(:,3).*p(:,4) - x(:,3).*q(:,2).*r(:,4) + x(:,3).*r(:,2).*q(:,4) + y(:,3).*p(:,2).*r(:,4) - y(:,3).*r(:,2).*p(:,4) - z(:,3).*p(:,2).*q(:,4) + z(:,3).*q(:,2).*p(:,4) + x(:,4).*q(:,2).*r(:,3) - x(:,4).*r(:,2).*q(:,3) - y(:,4).*p(:,2).*r(:,3) + y(:,4).*r(:,2).*p(:,3) + z(:,4).*p(:,2).*q(:,3) - z(:,4).*q(:,2).*p(:,3);
c =  -x(:,1).*y(:,2).*r(:,3) + x(:,1).*z(:,2).*q(:,3) + x(:,1).*y(:,3).*r(:,2) - x(:,1).*z(:,3).*q(:,2) + y(:,1).*x(:,2).*r(:,3) - y(:,1).*z(:,2).*p(:,3) - y(:,1).*x(:,3).*r(:,2) + y(:,1).*z(:,3).*p(:,2) - z(:,1).*x(:,2).*q(:,3) + z(:,1).*y(:,2).*p(:,3) + z(:,1).*x(:,3).*q(:,2) - z(:,1).*y(:,3).*p(:,2) - x(:,2).*y(:,3).*r(:,1) + x(:,2).*z(:,3).*q(:,1) + y(:,2).*x(:,3).*r(:,1) - y(:,2).*z(:,3).*p(:,1) - z(:,2).*x(:,3).*q(:,1) + z(:,2).*y(:,3).*p(:,1) + x(:,1).*y(:,2).*r(:,4) - x(:,1).*z(:,2).*q(:,4) - x(:,1).*y(:,4).*r(:,2) + x(:,1).*z(:,4).*q(:,2) - y(:,1).*x(:,2).*r(:,4) + y(:,1).*z(:,2).*p(:,4) + y(:,1).*x(:,4).*r(:,2) - y(:,1).*z(:,4).*p(:,2) + z(:,1).*x(:,2).*q(:,4) - z(:,1).*y(:,2).*p(:,4) - z(:,1).*x(:,4).*q(:,2) + z(:,1).*y(:,4).*p(:,2) + x(:,2).*y(:,4).*r(:,1) - x(:,2).*z(:,4).*q(:,1) - y(:,2).*x(:,4).*r(:,1) + y(:,2).*z(:,4).*p(:,1) + z(:,2).*x(:,4).*q(:,1) - z(:,2).*y(:,4).*p(:,1) - x(:,1).*y(:,3).*r(:,4) + x(:,1).*z(:,3).*q(:,4) + x(:,1).*y(:,4).*r(:,3) - x(:,1).*z(:,4).*q(:,3) + y(:,1).*x(:,3).*r(:,4) - y(:,1).*z(:,3).*p(:,4) - y(:,1).*x(:,4).*r(:,3) + y(:,1).*z(:,4).*p(:,3) - z(:,1).*x(:,3).*q(:,4) + z(:,1).*y(:,3).*p(:,4) + z(:,1).*x(:,4).*q(:,3) - z(:,1).*y(:,4).*p(:,3) - x(:,3).*y(:,4).*r(:,1) + x(:,3).*z(:,4).*q(:,1) + y(:,3).*x(:,4).*r(:,1) - y(:,3).*z(:,4).*p(:,1) - z(:,3).*x(:,4).*q(:,1) + z(:,3).*y(:,4).*p(:,1) + x(:,2).*y(:,3).*r(:,4) - x(:,2).*z(:,3).*q(:,4) - x(:,2).*y(:,4).*r(:,3) + x(:,2).*z(:,4).*q(:,3) - y(:,2).*x(:,3).*r(:,4) + y(:,2).*z(:,3).*p(:,4) + y(:,2).*x(:,4).*r(:,3) - y(:,2).*z(:,4).*p(:,3) + z(:,2).*x(:,3).*q(:,4) - z(:,2).*y(:,3).*p(:,4) - z(:,2).*x(:,4).*q(:,3) + z(:,2).*y(:,4).*p(:,3) + x(:,3).*y(:,4).*r(:,2) - x(:,3).*z(:,4).*q(:,2) - y(:,3).*x(:,4).*r(:,2) + y(:,3).*z(:,4).*p(:,2) + z(:,3).*x(:,4).*q(:,2) - z(:,3).*y(:,4).*p(:,2);
d =  x(:,1).*z(:,2).*y(:,3) - x(:,1).*y(:,2).*z(:,3) + y(:,1).*x(:,2).*z(:,3) - y(:,1).*z(:,2).*x(:,3) - z(:,1).*x(:,2).*y(:,3) + z(:,1).*y(:,2).*x(:,3) + x(:,1).*y(:,2).*z(:,4) - x(:,1).*z(:,2).*y(:,4) - y(:,1).*x(:,2).*z(:,4) + y(:,1).*z(:,2).*x(:,4) + z(:,1).*x(:,2).*y(:,4) - z(:,1).*y(:,2).*x(:,4) - x(:,1).*y(:,3).*z(:,4) + x(:,1).*z(:,3).*y(:,4) + y(:,1).*x(:,3).*z(:,4) - y(:,1).*z(:,3).*x(:,4) - z(:,1).*x(:,3).*y(:,4) + z(:,1).*y(:,3).*x(:,4) + x(:,2).*y(:,3).*z(:,4) - x(:,2).*z(:,3).*y(:,4) - y(:,2).*x(:,3).*z(:,4) + y(:,2).*z(:,3).*x(:,4) + z(:,2).*x(:,3).*y(:,4) - z(:,2).*y(:,3).*x(:,4);


%% regular case - cubic equation
delta0 = b.^2-3.*a.*c;
delta1 = 2.*b.^3 - 9.*a.*b.*c + 27.*a.^2.*d;
C=((delta1+sqrt(delta1.^2-4*delta0.^3))/2).^(1/3);
u1 = 1;
u2 = ((-1+sqrt(3)*sqrt(-1))/2);
u3 = ((-1-sqrt(3)*sqrt(-1))/2);
%
ti1 = -(b+u1*C+delta0./(u1*C))./(3*a);
ti2 = -(b+u2*C+delta0./(u2*C))./(3*a);
ti3 = -(b+u3*C+delta0./(u3*C))./(3*a);

%% quadratic equation
ff = (abs(a)<=tol);
ti1(ff) = (-c(ff)+sqrt(c(ff).^2-4*b(ff).*d(ff)))/2./b(ff);
ti2(ff) = (-c(ff)-sqrt(c(ff).^2-4*b(ff).*d(ff)))/2./b(ff);
ti3(ff) = ti2(ff);

%% linear equation
ff = (abs(a)<=tol & abs(b)<=tol);
ti1(ff) = -d(ff)./c(ff);
ti2(ff) = ti1(ff);
ti3(ff) = ti1(ff);

%% deal with pseudo complex roots
ff=(abs(imag(ti1))<=tol);
ti1(ff) = real(ti1(ff));
%
ff=(abs(imag(ti2))<=tol);
ti2(ff) = real(ti2(ff));
%
ff=(abs(imag(ti3))<=tol);
ti3(ff) = real(ti3(ff));

%% get rid of negatives/imaginaries
ti1(ti1<0 | imag(ti1)~=0) = inf;
ti2(ti2<0 | imag(ti2)~=0) = inf;
ti3(ti3<0 | imag(ti3)~=0) = inf;

%% take minimal value
tmax = min( [min(ti1) min(ti2) min(ti3)] );