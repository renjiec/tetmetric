function M = quaternion2rotation(q, catdim)

M = zeros(3, 3, size(q, 1));

M(1,1,:) = sum(q.^2,2) - 2*sum( q(:,3:4).^2, 2 );
M(2,2,:) = sum(q.^2,2) - 2*sum( q(:,[2 4]).^2, 2 );
M(3,3,:) = sum(q.^2,2) - 2*sum( q(:,2:3).^2, 2 );

M(1,2,:) = 2*(q(:,3).*q(:,2) - q(:,4).*q(:,1) );
M(1,3,:) = 2*(q(:,3).*q(:,1) + q(:,4).*q(:,2) );

M(2,1,:) = 2*(q(:,2).*q(:,3) + q(:,4).*q(:,1) );
M(2,3,:) = 2*(-q(:,2).*q(:,1) + q(:,4).*q(:,3) );

M(3,1,:) = 2*(q(:,2).*q(:,4) - q(:,3).*q(:,1) );
M(3,2,:) = 2*(q(:,2).*q(:,1) + q(:,3).*q(:,4) );


if nargin>1 && catdim
    M = reshape( permute(M, [2 1 3]), 3, [] )';
end